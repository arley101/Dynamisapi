name: Build, Push, and Deploy Docker Image to Azure App Service - EliteDynamicsAPI

on:
  push:
    branches:
      - main # O tu rama de despliegue principal
  workflow_dispatch: # Permite la ejecución manual

env:
  AZURE_APP_SERVICE_NAME: "elitedynamicsapi"
  AZURE_RESOURCE_GROUP: "Memorycognitiva"
  ACR_LOGIN_SERVER: "elitedynamicsregistry.azurecr.io"
  IMAGE_NAME: "elitedynamicsapi"

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Usar ubuntu-latest está bien si el build es 100% remoto en Azure.

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: 'Log in to Azure with OIDC'
      uses: azure/login@v2
      with:
        client-id: 7ba8e830-0547-49f3-9c59-eba86729b326
        tenant-id: 3cc25eaa-8df6-4808-beae-97dbc8f40f75
        subscription-id: 85e07757-4fb1-4a7a-ad3e-053ff94ab88c

    - name: 'Log in to Azure Container Registry via CLI'
      run: |
        az acr login --name elitedynamicsregistry

    - name: 'Build and push Docker image to ACR'
      run: |
        docker build . -t elitedynamicsregistry.azurecr.io/elitedynamicsapi:${{ github.sha }} -t elitedynamicsregistry.azurecr.io/elitedynamicsapi:latest
        docker push elitedynamicsregistry.azurecr.io/elitedynamicsapi:${{ github.sha }}
        docker push elitedynamicsregistry.azurecr.io/elitedynamicsapi:latest

    - name: 'Deploy to Azure App Service'
      uses: azure/webapps-deploy@v3
      with:
        app-name: elitedynamicsapi
        resource-group-name: Memorycognitiva
        images: 'elitedynamicsregistry.azurecr.io/elitedynamicsapi:${{ github.sha }}'

    - name: 'Azure logout'
      if: always()
      run: |
        az logout
        az cache purge